--L1 status
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_status_2` AS
SELECT  
  SAFE_CAST(id_status AS INT64) AS product_status_id, --PK
  LOWER(status_name) AS product_status_name,
  DATE(SAFE.PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%S', date_update), "Europe/Prague") AS product_status_update_date
FROM `dulcet-bliss-455012-r5.L0_google_sheets.status` 
WHERE SAFE_CAST(id_status AS INT64) IS NOT NULL
  AND status_name IS NOT NULL
QUALIFY ROW_NUMBER() OVER(PARTITION BY SAFE_CAST(id_status AS INT64)) = 1;

--L1 branch
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_branch_2` AS
SELECT
  CAST(id_branch AS STRING) AS branch_id,                     -- PK
  CAST(branch_name AS STRING) AS branch_name,
  DATE(SAFE.PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%S', date_update), "Europe/Prague") AS branch_update_date
FROM `dulcet-bliss-455012-r5.L0_google_sheets.branch`
WHERE id_branch IS NOT NULL
  AND LOWER(id_branch) != 'id_branch'
QUALIFY ROW_NUMBER() OVER(PARTITION BY id_branch) = 1;

--L1 product
--check ok
--duplicities present, NA entries present, where and qualify applied, safe_cast applied to filter out duplicity in header
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_product_2` AS
SELECT
  SAFE_CAST(id_product AS int64) AS product_id, --PK
  CAST(name AS STRING) AS product_name,
  IF(LOWER(is_vat_applicable) = 'yes', TRUE, FALSE) AS product_is_vat_applicable,
  CAST(type AS STRING) AS product_type,
  CAST(category AS STRING) AS product_category,
  DATE(SAFE.PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%S', date_update), "Europe/Prague") AS product_update_date
FROM `dulcet-bliss-455012-r5.L0_google_sheets.product`
WHERE id_product IS NOT NULL
QUALIFY ROW_NUMBER() OVER(PARTITION BY id_product) = 1;

--L1 invoice
--invoice type: 1- invoice, 3 - credit_note, 2 - return, 4 - other
--Invoice status. Invoice status < 100  have been issued. >= 100 - not issued
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_invoice_2` AS
SELECT
  SAFE_CAST(id_invoice AS INT64) AS invoice_id, --PK
  SAFE_CAST(id_invoice_old AS INT64) AS invoice_id_old,
  SAFE_CAST(invoice_id_contract AS INT64) AS contract_id,
  DATE(TIMESTAMP(date), "Europe/Prague") AS invoice_date,
  DATE(TIMESTAMP(scadent), "Europe/Prague") AS invoice_due_date,
  DATE(TIMESTAMP(date_paid), "Europe/Prague") AS invoice_date_paid,
  DATE(TIMESTAMP(start_date), "Europe/Prague") AS invoice_start_date,
  DATE(TIMESTAMP(end_date), "Europe/Prague") AS invoice_end_date,
  SAFE_CAST(value AS FLOAT64) AS invoice_amount_usd,
  CAST(number AS STRING) AS invoice_number,
  SAFE_CAST(invoice_type AS INT64) AS invoice_type_id,
  CASE
    WHEN invoice_type = 1 THEN "invoice"
    WHEN invoice_type = 2 THEN "return"
    WHEN invoice_type = 3 THEN "credit_note"
    WHEN invoice_type = 4 THEN "other"
    ELSE 'unknown'
  END AS invoice_type_text,
  SAFE_CAST(flag_paid_currier AS BOOL) AS flag_paid_currier,
  SAFE_CAST(payed AS FLOAT64) AS invoice_paid_usd,
  SAFE_CAST(value_storno AS FLOAT64) AS invoice_storno_usd,
  DATE(TIMESTAMP(date_insert), "Europe/Prague") AS invoice_inserted_at,
  status AS invoice_status_id,
  IF(status < 100, TRUE, FALSE) AS flag_invoice_issued,
  DATE(TIMESTAMP(date_update), "Europe/Prague") AS invoice_updated_at,
  SAFE_CAST(id_branch AS INT64) AS branch_id
FROM `dulcet-bliss-455012-r5.L0_accounting_system.invoice`
WHERE id_invoice IS NOT NULL
QUALIFY ROW_NUMBER() OVER(PARTITION BY id_invoice) = 1;

--L1 invoice load
--check on unique PKs done, nulls on PK done
--checklist OK
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_invoice_load_2` AS
SELECT
  SAFE_CAST(id_load AS INT64) AS invoice_load_id, --PK
  SAFE_CAST(id_contract AS INT64) AS contract_id,
  SAFE_CAST(id_package AS INT64) AS package_id,
  SAFE_CAST(id_package_template AS INT64) AS product_id,
  SAFE_CAST(notlei AS FLOAT64) AS invoice_fee_notlei,
  CAST(currency AS STRING) AS invoice_currency, --ověřit s product ownerem, že nebude jiná currency než usd
  SAFE_CAST(tva AS INT64) AS invoice_vat_rate,
  SAFE_CAST(value AS FLOAT64) AS invoice_amount_usd,
  SAFE_CAST(payed AS FLOAT64) AS invoice_paid_usd,
  CAST(um AS STRING) AS unit_of_measure,
  case 
    when um IN ('mesia','m?síce','m?si?1ce','měsice','mesiace','měsíce','mesice') then  'month'
    when um = "kus" then "item"
    when um = "den" then 'day'
    when um = "min" then 'minute'
    when um = '0' then null 
    else um end AS unit,
  SAFE_CAST(quantity AS FLOAT64) AS product_quantity,
  DATE(TIMESTAMP(start_date), "Europe/Prague") AS load_start_date,
  DATE(TIMESTAMP(end_date), "Europe/Prague") AS load_end_date,
  DATE(TIMESTAMP(date_insert), "Europe/Prague") AS load_inserted_at,
  DATE(TIMESTAMP(date_update), "Europe/Prague") AS date_update,
  SAFE_CAST(id_invoice AS INT64) AS invoice_id,
  load_date AS load_processed_date
FROM `dulcet-bliss-455012-r5.L0_accounting_system.invoice_load`;


--L1 contract
--duplicities and nulls checked = NA
--checklist OK
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_contract_2` AS
SELECT
  SAFE_CAST(id_contract AS INT64) AS contract_id,
  SAFE_CAST(id_branch AS INT64) AS branch_id,
  DATE(TIMESTAMP(date_contract_valid_from), "Europe/Prague") AS contract_valid_from,
  DATE(PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%S %Z', date_contract_valid_to), 'Europe/Prague') AS contract_valid_to,--
  DATE(TIMESTAMP(date_registered), "Europe/Prague") AS contract_registered_at,
  DATE(TIMESTAMP(date_signed), "Europe/Prague") AS contract_signed_at,
  DATE(TIMESTAMP(activation_process_date), "Europe/Prague") AS contract_activation_process_date,
  DATE(TIMESTAMP(prolongation_date), "Europe/Prague") AS contract_prolongation_date,
  CAST(registration_end_reason AS STRING) AS contract_registration_end_reason,
  SAFE_CAST(flag_prolongation AS BOOL) AS flag_prolongation,
  SAFE_CAST(flag_send_inv_email AS BOOL) AS flag_send_invoice_email,
  CAST(contract_status AS STRING) AS contract_status,
  load_date AS contract_load_date
FROM `dulcet-bliss-455012-r5.L0_crm.contract`;


--L1 product purchase without descriptions
--check on not null and unique ids on package_id done
--checklist OK
CREATE OR REPLACE VIEW `dulcet-bliss-455012-r5.L1.L1_product_purchase_2` AS
SELECT
  SAFE_CAST(pp.id_package AS INT64) AS package_id, --PK
  SAFE_CAST(pp.id_contract AS INT64) AS contract_id,
  SAFE_CAST(pp.id_package_template AS INT64) AS product_id,
  DATE(TIMESTAMP(pp.date_insert), "Europe/Prague") AS purchase_inserted_at,
  DATE(PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%E*S %Z', pp.start_date), "Europe/Prague") AS purchase_start_date,
  DATE(PARSE_TIMESTAMP('%Y-%m-%d %H:%M:%E*S %Z', pp.end_date), "Europe/Prague") AS purchase_end_date,
  fee AS price_wo_vat_usd,
  DATE(TIMESTAMP(pp.date_update), "Europe/Prague") AS purchase_updated_at,
  SAFE_CAST(pp.package_status AS INT64) AS product_status_id,
  CAST(
    CASE 
      WHEN pp.measure_unit IN ('mesia','m?síce','m?si?1ce','měsice','mesiace','měsíce','mesice') THEN 'month'
      WHEN pp.measure_unit = 'kus' THEN 'item'
      WHEN pp.measure_unit = 'den' THEN 'day'
      WHEN pp.measure_unit = 'min' THEN 'minute'
      WHEN pp.measure_unit = '0' THEN NULL
      ELSE pp.measure_unit 
    END AS STRING
  ) AS measure_unit,
  SAFE_CAST(pp.id_branch AS INT64) AS branch_id,
  pp.load_date AS purchase_load_date,
  st.product_status_name
FROM `dulcet-bliss-455012-r5.L0_crm.product_purchase` AS pp
LEFT JOIN `dulcet-bliss-455012-r5.L1.L1_status` AS st
  ON pp.package_status = st.product_status_id
WHERE pp.id_package IS NOT NULL;
